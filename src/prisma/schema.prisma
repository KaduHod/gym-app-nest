datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  name              String?             @db.VarChar(55)
  nickname          String?             @unique(map: "users_nickname_unique") @db.VarChar(30)
  email             String?             @unique(map: "users_email_unique") @db.VarChar(100)
  password          String?             @db.VarChar(255)
  cellphone         String?             @db.VarChar(20)
  createdAt         DateTime?           @default(now()) @db.DateTime(0)
  updatedAt         DateTime?           @db.DateTime(0)
  Personal         Personal[] @relation("personalUser")
  Aluno         Aluno[] @relation("personalAluno")
  users_permissions users_permissions[]

  @@map(name: "users")     
}

model Personal {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  userId            Int @db.UnsignedInt
  User              User @relation("personalUser", fields: [userId], references: [id]) 
  Alunos     Aluno[]  @relation("personalToAluno")
  @@map(name: "personais")        
}

model Aluno {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  userId            Int @db.UnsignedInt
  User              User @relation("personalAluno", fields: [userId], references: [id])  
  personalId Int? @db.UnsignedInt @map(name:"personal_id")
  Personal Personal? @relation("personalToAluno", fields: [personalId],references: [id])
  @@map(name: "alunos")
}

model users_permissions {
  id            Int        @id @default(autoincrement()) @db.UnsignedInt
  user_id       Int        @db.UnsignedInt
  permission_id Int        @db.UnsignedInt
  createdAt     DateTime?  @default(now()) @db.DateTime(0)
  updatedAt     DateTime?  @db.DateTime(0)
  User          User       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_permissions_ibfk_1")
  permissions   Permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_permissions_ibfk_2")

  @@index([permission_id], map: "permission_id")
  @@index([user_id], map: "user_id")
}


model Articulation {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  name                  String                  @db.VarChar(255)
  createdAt             DateTime?               @default(now()) @db.DateTime(0)
  updatedAt             DateTime?               @db.DateTime(0)
  Movements             Movements[] @relation()
  Muscles               MusclePortion[] 
  @@map(name: "articulations")
}

model Movements {
  id                           Int                            @id @default(autoincrement()) @db.UnsignedInt
  name                         String                         @db.VarChar(255)
  createdAt                    DateTime?                      @default(now()) @db.DateTime(0)
  updatedAt                    DateTime?                      @db.DateTime(0)
  Articulations        Articulation[]

  @@map(name: "movements")
}

model MusclePortion {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  image              String?              @db.VarChar(255)
  muscleGroup_id     Int
  created_at         DateTime?            @default(now()) @db.DateTime(0)
  updated_at         DateTime?            @db.DateTime(0)
  Articulations      Articulation[] 
  Group              MuscleGroup          @relation(fields: [muscleGroup_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "muscle_portion_muscleGRoup")
  Exercises          Exercicio[]

  @@index([muscleGroup_id], map: "muscle_portion_muscleGRoup")
  @@map(name: "muscle_portion")
}

model Exercicio {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  createdAt                DateTime?                  @default(now()) @db.DateTime(0)
  updatedAt                DateTime?                  @db.DateTime(0)
  name                     String                     @db.VarChar(255)
  force                    String?                    @db.VarChar(255)
  link                     String?                    @db.VarChar(255)
  execution                String?                    @db.Text
  mechanic                 String?                    @db.Text
  muscles MusclePortion[]

  @@map(name: "exercicios")
}



model MuscleGroup {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(20)
  image         String?         @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.DateTime(0)
  updated_at    DateTime?       @db.DateTime(0)
  MusclePortion MusclePortion[]

  @@map(name: "muscle_group")
}

model Permission {
  id                Int                 @id @default(autoincrement()) @db.UnsignedInt
  title             String              @db.VarChar(45)
  createdAt         DateTime?           @default(now()) @db.DateTime(0)
  updatedAt         DateTime?           @db.DateTime(0)
  users_permissions users_permissions[]

  @@map(name: "permissions")
}

model Treino {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  createdAt DateTime? @default(now()) @db.DateTime(0)
  updatedAt DateTime? @db.DateTime(0)

  @@map(name: "treinos")
}


enum exercise_muscle_portions_role {
  agonist
  synergist
  stabilizer
  antagonist_stabilizer @map("antagonist stabilizer")
  dynamic_stabilizer    @map("dynamic stabilizer")
}

enum exercise_muscle_role {
  agonist
  synergist
  stabilizer
  antagonist_stabilizer @map("antagonist stabilizer")
  dynamic_stabilizer    @map("dynamic stabilizer")
}

enum articulation_movement_muscle_role {
  agonist
  synergist
  stabilizer
  antagonist_stabilizer @map("antagonist stabilizer")
  dynamic_stabilizer    @map("dynamic stabilizer")
}